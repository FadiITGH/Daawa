@page "/AllDawas"

@using System.Net.Http.Json
@using Daawa.BackEnd.Interfaces;
@using Daawa.Models;


@inject IDawa _Dawa
@inject IJSRuntime _js
@inject ISnackbar _Sb

<MudDataGrid T="DaawaModel" MultiSelection="true" Items="@Elements" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="@_quickFilter"
             Hideable="true" RowClick="@RowClicked" SelectedItemsChanged="@SelectedItemsChanged">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Dawas Table</MudText>
        <button @onclick="DeleteDawas" class="btn btn-outline-danger" style="margin-left:20px">حذف</button>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <Columns>
        <SelectColumn T="DaawaModel" />
        <PropertyColumn Property="x => x.SelectDawa" Title="الدعوى" Sortable="true" Filterable="false" />
        <PropertyColumn Property="x => x.DawaNumber" Title="رقم الدعوى" />
        <PropertyColumn Property="x => x.DawaType" SortBy="@_sortBy" />
        <PropertyColumn Property="x => x.Name1" Title="المدعي"/>
        <PropertyColumn Property="x => x.Name2" Title="المدعى عليه" />
        <PropertyColumn Property="x => x.DeptTable.DepName" Title="اسم التشكيل" />
    </Columns>
    <PagerContent>
        <MudDataGridPager T="DaawaModel" />
    </PagerContent>
</MudDataGrid>

<div class="d-flex flex-wrap mt-4">
    <MudSwitch @bind-Checked="@_sortNameByLength" Color="Color.Primary">Sort Name Column By Length</MudSwitch>
</div>

<MudExpansionPanels Style="flex:1">
    <MudExpansionPanel Text="Show Events">
        @foreach (var message in _events)
        {
            <MudText Typo="@Typo.body2">@message</MudText>
        }
        @if (_events.Count > 0)
        {
            <div class="d-flex">
                <MudSpacer />
                <MudButton Class="mt-3" ButtonType="ButtonType.Button" Variant="Variant.Filled" OnClick="@(() => _events.Clear())">Clear</MudButton>
            </div>
        }
    </MudExpansionPanel>
</MudExpansionPanels>


@code {
    private IEnumerable<DaawaModel> Elements = new List<DaawaModel>();
    private string _searchString;
    private bool _sortNameByLength;
    private List<string> _events = new();

    public List<DaawaModel> ListOfDeletedDawas { get; set; } = new List<DaawaModel>();

    // custom sort by name length
    private Func<DaawaModel, object> _sortBy => x =>
    {
        if (_sortNameByLength)
            return x.SelectDawa.Length;
        else
            return x.SelectDawa;
    };
    // quick filter - filter gobally across multiple columns with the same input
    private Func<DaawaModel, bool> _quickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        if (x.SelectDawa.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (x.DeptTable.DepName.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        // if (x.DeptTable.OfficeTable.OfficeName.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
        //     return true;

        if ($"{x.DawaNumber} {x.LastUpdate.ToString()} {x.DawaType}".Contains(_searchString))
            return true;

        return false;
    };

    protected override async Task OnInitializedAsync()
    {
        Elements = await _Dawa.GetAllDawas();
    }

    // events
    void RowClicked(DataGridRowClickEventArgs<DaawaModel> args)
    {
        _events.Insert(0, $"Event = RowClick, Index = {args.RowIndex}, Data = {System.Text.Json.JsonSerializer.Serialize(args.Item)}");
    }

    void SelectedItemsChanged(HashSet<DaawaModel> items)
    {
        _events.Insert(0, $"Event = SelectedItemsChanged, Data = {System.Text.Json.JsonSerializer.Serialize(items)}");
        ListOfDeletedDawas = items.ToList();

    }


    private async Task DeleteDawas()
    {
        var Response = await _js.InvokeAsync<bool>("confirm", "امسح شبيك خايف");
        if (Response)
        {
            var BackEndREsponse = await _Dawa.DeleteListOfDawas(ListOfDeletedDawas.Select(a => a.Id).ToList());
            _Sb.Add(BackEndREsponse, Severity.Success);
            Elements = await _Dawa.GetAllDawas();
        }
        else
        {
            return;    
        }
        
    }

    
}